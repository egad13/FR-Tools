# Custom workflow to generate JSDocs, minify source code, and deploy the docs & minified code to Github Pages
name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


permissions:
  contents: write # Sets write permission for the repo so we can push to the special branch
  pages: write # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      # Get latest
      - name: Checkout main
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      # Generate docs
      - name: Generate docs
        uses: andstor/jsdoc-action@v1
        with:
          source_dir: ./js
          recurse: true
          output_dir: ./docs
          front_page: ./README.md
          template: clean-jsdoc-theme
          config_file: ./.jsdoc/conf.json
      # Minify source
      - name: Minify source code
        uses: dra1ex/minify-action@v1.0.3
      # Push to gh-pages branch
      - name: Push to gh-pages branch
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Minify source code, generate docs
          branch: gh-pages

      # Build site from gh-pages branch
      - name: Checkout gh-pages
        uses: actions/checkout@v3
        with:
          ref: gh-pages
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
